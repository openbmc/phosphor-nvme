{
  "comments": [
    {
      "key": {
        "uuid": "3179dca2_9b863a28",
        "filename": "nvme-pwr-ctrl/nvme_pwr_ctrl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-11-19T02:05:38Z",
      "side": 1,
      "message": "Can we split this out as class instead?",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 23
      },
      "revId": "2cdac5c1a68b35e80dbf03164c8961cd5178aa84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30afbd04_fc6e2991",
        "filename": "nvme-pwr-ctrl/nvme_pwr_ctrl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 174,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2020-11-19T02:05:38Z",
      "side": 1,
      "message": "I had to recently create a discrete IPMI sensor and William suggested that I overload the property\u0027s getter function instead - then in the getter function, create a matcher that waits for the systemd to finish and determine its status.\n\nThe benefit of doing it this way is that we can make the systemd call blocking (until it finishes) and report its status. Also, it makes it so that we can toggle both the assert and deassert event via 0x01 instead of having to change the `ipmitool raw` command (0x10 for assert, 0x03 for deassert, etc.)\n\nSample code of how the matcher would look like: https://github.com/openbmc/phosphor-ipmi-flash/blob/master/bmc/general_systemd.cpp#L45",
      "range": {
        "startLine": 171,
        "startChar": 39,
        "endLine": 174,
        "endChar": 60
      },
      "revId": "2cdac5c1a68b35e80dbf03164c8961cd5178aa84",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}